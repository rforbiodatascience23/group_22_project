---
title: "05_analysis_1"
author: "group22"
format:
  html:
    embed-resources: true
editor: visual
---

```{r}
df <- read_tsv("../data/03_dat_aug.tsv")
head(df)
```

```{r}
str(df)
```

```{r}
library(tidyverse)
```

```{r}
table(df$Diabetes_binary)
```

# CORRELATION

```{r}
df_numeric <- df[sapply(df, is.numeric)]
```

```{r}
cor_matrix <- cor(df_numeric, use = "pairwise.complete.obs")

print("Correlation Matrix:")
print(cor_matrix)
```

```{r}
library(ggplot2)
ggplot(data = as.data.frame(as.table(cor_matrix)), aes(x = Var1, y = Var2, fill = Freq)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-1, 1), space = "Lab", name = "Correlation") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
diag(cor_matrix) <- 0

strong_correlations <- subset(as.data.frame(as.table(cor_matrix)), Freq > 0.45 | Freq < -0.45)
print("Strong Correlations:")
print(strong_correlations)
```

# GENERAL MODEL WITH ALL VARIABLES

```{r}
model_all = glm(data = df_numeric,
                Diabetes_binary ~ .,
                family = binomial)
summary(model_all)
```

```{r}
forward_model <- step(model_all, direction = "forward")

backward_model <- step(model_all, direction = "backward")

cat("\nForward Selection Model Summary:\n")
summary(forward_model)

cat("\nBackward Selection Model Summary:\n")
summary(backward_model)
```

```{r}
AIC_full <- AIC(model_all)

AIC_forward <- AIC(forward_model)

AIC_backward <- AIC(backward_model)

cat("AIC for Full Model:", AIC_full, "\n")
cat("AIC for Forward Model:", AIC_forward, "\n")
cat("AIC for Backward Model:", AIC_backward, "\n")
```

```{r}
count_selected_variables <- function(model) {
  return(sum(coefficients(model) != 0))
}

print_selected_variables <- function(model, model_name) {
  selected_variables <- names(coefficients(model)[coefficients(model) != 0])
  cat("Number of Variables selected by", model_name, ":", length(selected_variables), "\n")
  cat("Selected Variables:", paste(selected_variables, collapse = ", "), "\n\n")
}

count_full_model <- count_selected_variables(model_all)
count_forward_model <- count_selected_variables(forward_model)
count_backward_model <- count_selected_variables(backward_model)

print_selected_variables(model_all, "Full Model")
print_selected_variables(forward_model, "Forward Model")
print_selected_variables(backward_model, "Backward Model")

cat("Count of Variables selected by Full Model:", count_full_model, "\n")
cat("Count of Variables selected by Forward Model:", count_forward_model, "\n")
cat("Count of Variables selected by Backward Model:", count_backward_model, "\n")
```
